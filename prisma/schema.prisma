// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clients {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  password        String
  sessions        SessionClients[]
  servicesClients ServicesClients[]
  messages        Messages[]

  @@map("clients")
}

model SessionClients {
  client   Clients @relation(fields: [clientId], references: [id])
  clientId Int
  token    String

  @@id([clientId, token])
  @@map("sessionClients")
}

model Companies {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  services         Services[]
  messages         Messages[]
  sessionCompanies SessionCompanies[]

  @@map("companies")
}

model SessionCompanies {
  company   Companies @relation(fields: [companyId], references: [id])
  companyId Int
  token     String

  @@id([companyId, token])
  @@map("sessionCompanies")
}

model Services {
  id              Int               @id @default(autoincrement())
  name            String
  company         Companies         @relation(fields: [companyId], references: [id])
  companyId       Int
  servicesClients ServicesClients[]

  @@map("services")
}

model ServicesClients {
  id        Int      @id @default(autoincrement())
  client    Clients  @relation(fields: [clientId], references: [id])
  clientId  Int
  service   Services @relation(fields: [serviceId], references: [id])
  serviceId Int

  @@map("servicesClients")
}

model Adresses {
  id         Int    @id @default(autoincrement())
  street     String
  number     String
  postalCode String
  complement String
  city       Cities @relation(fields: [cityId], references: [id])
  cityId     Int

  @@map("adresses")
}

model Cities {
  id      Int        @id @default(autoincrement())
  name    String
  state   States     @relation(fields: [stateId], references: [id])
  stateId Int
  adress  Adresses[]

  @@map("cities")
}

model States {
  id   Int      @id @default(autoincrement())
  name String
  city Cities[]

  @@map("states")
}

model Messages {
  id        Int       @id @default(autoincrement())
  client    Clients   @relation(fields: [clientId], references: [id])
  clientId  Int
  company   Companies @relation(fields: [companyId], references: [id])
  companyId Int
  text      String
  time      DateTime  @default(now())

  @@map("messages")
}
